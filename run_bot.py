#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ —Ç—Ä–µ–Ω–µ—Ä–∞
"""

import os
import sys
from dotenv import load_dotenv

def check_environment():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
    load_dotenv()
    
    telegram_token = os.getenv('TELEGRAM_TOKEN')
    openrouter_key = os.getenv('OPENROUTER_API_KEY')
    
    errors = []
    
    if not telegram_token or telegram_token == "your_telegram_bot_token_here":
        errors.append("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print("‚úÖ TELEGRAM_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if not openrouter_key or openrouter_key == "your_openrouter_api_key_here":
        errors.append("‚ùå OPENROUTER_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print("‚úÖ OPENROUTER_API_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if errors:
        print("\nüö® –û—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in errors:
            print(error)
        
        print("\nüìù –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ env_example.txt –≤ .env")
        print("2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç")
        
        return False
    
    return True

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    try:
        import telegram
        print("‚úÖ python-telegram-bot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå python-telegram-bot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    try:
        import openai
        print("‚úÖ openai —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå openai –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    try:
        import aiohttp
        print("‚úÖ aiohttp —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except ImportError:
        print("‚ùå aiohttp –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install -r requirements.txt")
        return False
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üèãÔ∏è‚Äç‚ôÇÔ∏è –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –¢—Ä–µ–Ω–µ—Ä - –ó–∞–ø—É—Å–∫")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not check_environment():
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not check_dependencies():
        sys.exit(1)
    
    print("\nüöÄ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 40)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        from bot import FitnessTrainerBot
        
        bot = FitnessTrainerBot()
        bot.run()
        
    except KeyboardInterrupt:
        print("\n\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

if __name__ == "__main__":
    main()
